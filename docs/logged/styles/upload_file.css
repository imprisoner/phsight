.popup-menu {
  display: none;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: #434343cc;
  z-index: 999;
}
.popup-menu .wrap {
  position: relative;
  min-width: 230px;
  width: fit-content;
  max-width: 90%;
  padding: 40px;
  background-color: #434343;
  margin: calc(50vh - 112px) auto;
  border-radius: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 120px;
}
.popup-menu .insertion {
  font-family: Roboto;
  font-style: normal;
  font-weight: bold;
  font-size: 18.75px;
  line-height: 130%;
  color: #ffffff;
}
.popup-menu .popup-close {
  font-size: 20px;
  line-height: 165%;
  color: #ffffff;
  position: absolute;
  top: 10px;
  right: 20px;
  cursor: pointer;
}
.upload-top {
  padding: 80px 0 40px;
  text-align: center;
}
.upload-top h1 {
  margin-bottom: 10px;
  font-family: Roboto;
  font-style: normal;
  font-weight: bold;
  font-size: 46px;
  line-height: 130%;
  color: #282828;
  font-weight: 400;
}
.upload-top h3 {
  font-family: Roboto;
  font-style: normal;
  font-weight: bold;
  font-size: 30px;
  line-height: 130%;
  color: #282828;
  font-weight: 400;
}
input[type="submit"] {
  border: 2px solid #eaeaea;
  border-radius: 10px;
  padding: 5px 22px;
  background-color: transparent;
  display: flex;
  align-items: center;
  text-align: center;
  justify-content: center;
  min-width: 40px;
  height: 40px;
  font-family: Roboto;
  font-style: normal;
  font-weight: bold;
  font-size: 15px;
  line-height: 175%;
  color: #282828;
  margin-left: 10px;
  outline: none;
  cursor: pointer;
  width: fit-content;
}
input[type="submit"]:hover,
input[type="submit"]:focus {
  background-color: #eaeaea;
}
input[type="submit"]:active {
  border-color: #bcbcbc;
  background-color: #bcbcbc;
  outline: none;
}
input[type="text"]::-moz-placeholder {
  color: #eaeaea;
}
input[type="text"]:-moz-placeholder {
  color: #eaeaea;
}
input[type="text"]:-ms-input-placeholder {
  color: #eaeaea;
}
input[type="text"]::-webkit-input-placeholder {
  color: #eaeaea;
}
input[type="text"]::placeholder {
  color: #eaeaea;
}
@media (max-width: 1279px) {
  .upload-top {
    padding: 60px 0 20px;
  }
}
@media (max-width: 767px) {
  .upload-top {
    padding: 40px 0 20px;
  }
}
.file {
  height: calc(100vh - 318px);
  min-height: 620px;
  text-align: center;
}
.file-warn {
  background-color: #F6F2E2;
  border-radius: 10px;
  padding: 17px 0;
  margin-bottom: 80px;
}
.file-warn p {
  font-family: Roboto;
  font-style: normal;
  font-weight: normal;
  font-size: 15px;
  line-height: 175%;
  color: #282828;
}
.file-photo {
  display: flex;
  margin: 0 auto;
  width: fit-content;
  padding-bottom: 40px;
}
.file-photo input[type="file"] {
  opacity: 0;
  position: absolute;
  z-index: -1;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  outline: none;
}
.file-photo .replacement {
  background: #ffffff0d;
  border: 2px solid #EAEAEA;
  width: 560px;
  height: 40px;
  padding: 6px 12px;
  border-radius: 10px;
  display: flex;
  align-items: center;
  font-family: Roboto;
  font-style: normal;
  font-weight: normal;
  font-size: 15px;
  line-height: 175%;
  color: #282828;
  outline: none;
  text-overflow: ellipsis;
  line-break: strict;
}
.file-photo i {
  font-size: 16px;
  position: absolute;
  top: 12px;
  right: 12px;
  cursor: pointer;
}
.file-area {
  position: relative;
}
.file-about p {
  font-family: Roboto;
  font-style: normal;
  font-weight: normal;
  font-size: 15px;
  line-height: 175%;
  color: #BCBCBC;
}
.file-about b {
  font-family: Roboto;
  font-style: normal;
  font-weight: bold;
  font-size: 15px;
  line-height: 175%;
  color: #282828;
}
@media (max-width: 767px) {
  .file {
    min-height: 690px;
  }
  .file-warn {
    padding: 17px 20px;
  }
  .file-photo {
    flex-direction: column;
    width: 100%;
  }
  .file-photo .replacement {
    width: 100%;
  }
  .file-photo button[type=submit] {
    width: 155px;
    margin: 0 auto;
  }
  .file-area {
    padding-bottom: 10px;
  }
}
@media (max-width: 479px) {
  .file {
    min-height: 820px;
  }
  .file .replacement span {
    display: none;
  }
  .file-about {
    padding-bottom: 80px;
  }
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/